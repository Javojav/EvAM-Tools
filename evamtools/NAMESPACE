useDynLib(evamtools, .registration = TRUE)

export(
    "sample_CPMs"
  , "evam"
  , "plot_CPMs"
  , "runShiny"
  , "random_evam"
  , "paths_probs_2_df"
     )

importFrom("shiny", "runApp", "Progress")
importFrom("shinyjs", "useShinyjs", "enable", "disable", "disabled")
importFrom("grDevices", "rgb", "colorRampPalette")
importFrom("graphics", "axis", "legend", "lines", "par", "title", "barplot",
           "grid", "mtext")
importFrom("utils", "capture.output", "read.csv", "read.table", "type.convert",
           "write.csv", "tail", "globalVariables")
importFrom("Matrix", "diag", "rowSums", "colSums", "summary", "Matrix",
           "sparseMatrix", "bandSparse", "t", "tril", "nnzero")
importFrom("OncoSimulR", "evalAllGenotypes",
           "allFitnessEffects", "rfitness")
importFrom("stringr", "str_count", "str_replace", "str_split",
           "str_replace_all")
importFrom("stringi", "stri_count", "stri_count_fixed", "stri_count_regex",
           "stri_replace_all_regex", "stri_replace_all_fixed")
importFrom("parallel", "detectCores", "mclapply")
importFrom("DT", "renderDT", "DTOutput", "editData")
importFrom("Oncotree", "oncotree.fit", "marginal.distr",
           "distribution.oncotree", "bootstrap.oncotree")    
importFrom("gtools", "combinations")
importFrom("igraph", "V", "E", "graph.data.frame", "layout.reingold.tilford"
         , "get.adjacency", "all_simple_paths", "decompose", "is_dag",
           "distances"
         , "subcomponent", "adjacent_vertices", "graph_from_adjacency_matrix"
         , "graph_from_data_frame", "head_of", "as_adjacency_matrix",
           "make_directed_graph", "incident", "ends", "as_data_frame",
           "layout_with_sugiyama", "get.edgelist", "as_ids")
importFrom("stats", "aggregate", "chisq.test", "na.omit", "rexp",
           "runif", "rnorm", "optim", "setNames")
## just something, so plot.matrix is available
## See https://stackoverflow.com/a/59667634
importFrom("plot.matrix", "fmt")

importFrom("OncoBN", "fitCPN", "Lik.genotype")
importFrom("mccbn", "candidate_posets", "adaptive.simulated.annealing",
           "random_poset")

importFrom("RhpcBLASctl", "blas_set_num_threads", "omp_set_num_threads")
importFrom("Rlinsolve", "lsolve.jacobi")
importFrom("fastmatrix", "seidel")

importFrom("graph", "plot", "graphAM", "graph.par")
importFrom("Rgraphviz", "layoutGraph", "renderGraph")
