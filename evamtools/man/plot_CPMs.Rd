% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CPM-plotting.R
\name{plot_CPMs}
\alias{plot_CPMs}
\title{Plot results from CPMs}
\usage{
plot_CPMs(
  cpm_output,
  samples = NULL,
  orientation = "horizontal",
  models = c("OT", "CBN", "OncoBN", "MCCBN", "MHN", "HESBCN"),
  plot_type = "probabilities",
  fixed_vertex_size = FALSE,
  top_paths = NULL
)
}
\arguments{
\item{cpm_output}{Output from the cpm}

\item{samples}{Output from a call to \link{sample_CPMs}. Necessary if
  you request plot type \code{transitions}.}

\item{orientation}{String. If it not "vertical" will be displayed with an horizontal layout. Optional.}

\item{models}{Output of the CPMs to plot. Current support is for OT, CBN, DBN, MCCBN and MHN Optional.}

\item{plot_type}{String. You can choose between 3 options. Optional.
transitions: shows the hypercubic genotype transitions 
             running simulations is needed before this}

\item{fixed_vertex_size}{Boolen. If TRUE, all nodes with all the same size and frequencies or observed data will not be used.}

\item{top_paths}{Number of most relevant paths to plot. Default NULL 
will plot all paths}
}
\description{
By default it creates a top row with the DAG of the CPM 
or de transtionRateMatrix for MHN
The bottom row has a custom plot for genotype transition
}
\examples{
dB_c1 <- matrix(
 c(
     rep(c(1, 0, 0, 0, 0), 300) #A
   , rep(c(0, 0, 1, 0, 0), 300) #C
   , rep(c(1, 1, 0, 0, 0), 200) #AB
   , rep(c(0, 0, 1, 1, 0), 200) #CD
   , rep(c(1, 1, 1, 0, 0), 100) #ABC
   , rep(c(1, 0, 1, 1, 0), 100) #ACD
   , rep(c(1, 1, 0, 0, 1), 100) #ABE
   , rep(c(0, 0, 1, 1, 1), 100) #CDE
   , rep(c(1, 1, 1, 0, 1), 100) #ABCE
   , rep(c(1, 0, 1, 1, 1), 100) #ACDE
   , rep(c(1, 1, 1, 1, 0), 50) # ABCD
   , rep(c(0, 0, 0, 0, 0), 10) # WT
 ), ncol = 5, byrow = TRUE
)
colnames(dB_c1) <- LETTERS[1:5]
out <- evam(dB_c1, methods = c("CBN", "OT", "HESBCN", "MHN", "OncoBN"))

plot_CPMs(out, dB_c1, plot_type = "trm")




out2 <- sample_all_CPMS(out, 100, n_genes = 5)

plot_CPMs(out2, dB_c1, plot_type = "transitions")

}
